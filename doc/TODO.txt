acabou-se:
- Estado global centralizado no componente raiz para poder serializar facilmente
- State pode ser nested mas apenas com dados (objectos sem métodos)
- CHATO: passar funções de update à maneira antiga. tentar mitigar demasiadas props através de truques:
    - form inputs podem todos usar a mesma callback e distinguir operação através do name do input
    - ter utilities para editar arrays do state
    - Ter interfaces para entidades geridas (Project, View), usar estas interfaces e spread operator para gerar interfaces
      de props e state e passagem de dados



Outputs expandiveis:
    - Cada starting URL: "XXX bytes loaded <a>show content<a/>", clicar no link abre um popup com o texto
    -


renren ($el, data) {
		$el.setInner(
				'<hr/>',
				createComponent(
						'<ul class="list-group"/>',
						($ell) => {
							$ell.setInner(
									data.projects.mapTo((project, i) => createComponent(
										`<li class="
												list-group-item
												list-group-item-action
												anansi-clickable
												text-truncate
												${i === data.selectedProjectIndex ? 'active' : ''}
										">
											${project.value.name}
										</li>`
									), ($elll) => {
										$elll.onClick(ev => {
											const newValue = data.selectedProjectIndex.value + 1
											data.selectedProjectIndex.set(newValue)
										})
									})
							)
						}
				)
		)
	}